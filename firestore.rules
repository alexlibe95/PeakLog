rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() { return request.auth != null; }
    function userRole() {
      return isSignedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        ? get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role
        : null;
    }
    function isSuper() { return userRole() == 'super'; }
    function isAdmin() {
      return userRole() == 'admin' || isSuper();
    }

    // CLUB-SPECIFIC role helpers (preferred over global roles)
    function isClubMember(clubId) {
      return isSignedIn() && exists(/databases/$(database)/documents/clubs/$(clubId)/members/$(request.auth.uid));
    }
    function isClubAdmin(clubId) {
      return isClubMember(clubId) &&
        get(/databases/$(database)/documents/clubs/$(clubId)/members/$(request.auth.uid)).data.role in ['admin', 'super'];
    }

    // ===== USER PROFILES =====
    match /users/{userId} {
      // Allow users to always read their own profile
      allow read: if isSignedIn() && request.auth.uid == userId;
      // Allow admins and super admins to read any user profile
      allow read: if isAdmin() || isSuper();
      allow write: if isSignedIn() && (
        request.auth.uid == userId ||
        isSuper() ||
        // Allow club admins to update memberships for member management
        (request.resource.data.diff(resource.data).affectedKeys().hasAny(['memberships']) &&
         isAdmin())
      );
    }

    // ===== CLUBS COLLECTION =====
    match /clubs/{clubId} {
      // Club info - all authenticated users can read, super admins can write
      allow read: if isSignedIn();
      allow write: if isSuper();

      // ===== CLUB MEMBERS =====
      match /members/{memberId} {
        // Allow users to read their own membership
        allow read: if isSignedIn() && request.auth.uid == memberId;
        // Allow club members and admins to read memberships (prioritize club-specific roles)
        allow read: if isClubMember(clubId) || isClubAdmin(clubId);
        // Fallback to global roles for cross-club operations
        allow read: if isAdmin() || isSuper();
        allow write: if isSignedIn() && (isClubAdmin(clubId) || isAdmin() || isSuper());
        // Allow invited user to create their own membership
        allow create: if isSignedIn() && request.auth.uid == memberId &&
          request.resource.data.inviteId is string &&
          exists(/databases/$(database)/documents/clubs/$(clubId)/invites/$(request.resource.data.inviteId)) &&
          get(/databases/$(database)/documents/clubs/$(clubId)/invites/$(request.resource.data.inviteId)).data.email == request.auth.token.email;
        // Allow users to create their own membership from pending assignments
        allow create: if isSignedIn() && request.auth.uid == memberId;
      }

      // ===== CLUB CATEGORIES =====
      match /categories/{categoryId} {
        // Prioritize club-specific roles for club operations
        allow read: if isSignedIn() && (isClubMember(clubId) || isClubAdmin(clubId));
        // Fallback to global roles for cross-club operations
        allow read: if isSignedIn() && (isAdmin() || isSuper());
        allow write: if isSignedIn() && (isClubAdmin(clubId) || isSuper());
      }

      // ===== CLUB INVITES =====
      match /invites/{inviteId} {
        allow read: if isSignedIn() && (
          (request.auth.token.email == resource.data.email) ||
          isAdmin() || isSuper()
        );
        allow create: if isSignedIn() && (isAdmin() || isSuper());
        allow update, delete: if isSignedIn() && (
          (isAdmin() || isSuper()) ||
          request.auth.token.email == resource.data.email
        );
      }

      // ===== CLUB SETTINGS =====
      match /settings/{settingId} {
        allow read: if isClubMember(clubId) || isSuper();
        allow write: if isClubAdmin(clubId) || isSuper();
      }

      // ===== TRAINING PROGRAMS =====
      match /programs/{programId} {
        allow read, write: if isClubAdmin(clubId) || isSuper();
      }

      // ===== TRAINING SESSIONS =====
      match /sessions/{sessionId} {
        allow read: if isClubMember(clubId) || isAdmin();
        allow write: if isClubAdmin(clubId) || isSuper();

        // Session attendance
        match /attendance/{attendanceId} {
          allow read: if isClubMember(clubId) || isAdmin();
          allow write: if isClubAdmin(clubId) || isSuper();
        }
      }

      // ===== CLUB MESSAGES =====
      match /messages/{messageId} {
        allow read: if isClubMember(clubId) || isAdmin();
        allow write: if isClubAdmin(clubId) || isSuper();
      }

      // ===== PENDING ASSIGNMENTS =====
      match /pendingAssignments/{assignmentId} {
        // Primary: Allow users to read their own pending assignments (by email)
        allow read: if request.auth != null && request.auth.token.email.replace('.', '_') == assignmentId;
        // Secondary: Allow club admins to read/write all assignments
        allow read, write: if request.auth != null && isClubAdmin(clubId);
        // Tertiary: Allow global admins to read/write all assignments
        allow read, write: if request.auth != null && (isAdmin() || isSuper());
        // Allow assignment owners to delete their own assignments
        allow delete: if request.auth != null && request.auth.token.email.replace('.', '_') == assignmentId;
      }
    }

    // ===== GLOBAL COLLECTIONS =====

    // Training Programs
    match /trainingPrograms/{programId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Training Sessions
    match /trainingSessions/{sessionId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();

      match /attendance/{attendanceId} {
        allow read: if isSignedIn() && request.auth.uid == resource.data.athleteId;
        allow read, write: if isAdmin();
      }
    }

    // ===== PERFORMANCE DATA =====

    // Performance Categories
    match /performanceCategories/{categoryId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // ===== CLUB-SPECIFIC COLLECTIONS =====

    // Club Performance Categories
    match /clubs/{clubId}/categories/{categoryId} {
      allow read: if isClubMember(clubId) || isSuper();
      allow write: if isClubAdmin(clubId) || isSuper();
    }

    // Athlete Records
    match /athleteRecords/{recordId} {
      allow read, write: if request.auth != null &&
        request.auth.uid == resource.data.athleteId;
      allow read, write: if isAdmin();
    }

    // Athlete Goals
    match /athleteGoals/{goalId} {
      allow read, write: if request.auth != null &&
        request.auth.uid == resource.data.athleteId;
      allow read, write: if isAdmin();
    }

    // Personal Records (from tests)
    match /personalRecords/{recordId} {
      allow read, write: if request.auth != null &&
        request.auth.uid == resource.data.athleteId;
      allow read, write: if isAdmin();
    }

    // Test Sessions
    match /testSessions/{sessionId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Test Results
    match /testResults/{resultId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && isAdmin();
    }


    match /goals/{goalId} {
      allow read, write: if request.auth != null &&
        request.auth.uid == resource.data.athleteId;
      allow read, write: if isAdmin();
    }

    // ===== DENY ALL OTHER ACCESS =====
    match /{document=**} {
      allow read, write: if false;
    }
  }
}